# name: Fabric
# version: "2.0.0"
# mutual-tls: false

# caliper:
#   blockchain: fabric
# # name: Caliper test
# # version: "2.0.0"

# # caliper:
# #   blockchain: fabric
# #   sutOptions:
# #     mutualTls: true
#   # command:
#   #   start: export FABRIC_VERSION=1.4.4;export FABRIC_CA_VERSION=1.4.4;docker-compose -f networks/fabric/docker-compose/2org1peercouchdb_solo_raft/docker-compose-tls.yaml up -d;sleep 10s
#   #   end: docker-compose -f networks/fabric/docker-compose/2org1peercouchdb_solo_raft/docker-compose-tls.yaml down;(test -z \"$(docker ps -aq)\") || docker rm $(docker ps -aq);(test -z \"$(docker images dev* -q)\") || docker rmi $(docker images dev* -q);rm -rf /tmp/hfc-*

# info:
#   Version: 2
#   Size: 3 Orgs with 2 Peer
#   Orderer: RaftOrderer
#   Distribution: Single Host
#   StateDB: CouchDB

# clients:
#   client0.org1.test.com:
#     client:
#       organization: Org1
#       credentialStore:
#         path: /tmp/hfc-kvs/org1
#         cryptoStore:
#           path: /tmp/hfc-cvs/org1
#       clientPrivateKey:
#         path: ./crypto-config/peerOrganizations/org1.test.com/users/User1@org1.test.com/msp/keystore/key.pem
#       clientSignedCert:
#         path: ./crypto-config/peerOrganizations/org1.test.com/users/User1@org1.test.com/msp/signcerts/User1@org1.test.com-cert.pem

#   client0.org2.test.com:
#     client:
#       organization: Org2
#       credentialStore:
#         path: /tmp/hfc-kvs/org2
#         cryptoStore:
#           path: /tmp/hfc-cvs/org2
#       clientPrivateKey:
#         path: ./crypto-config/peerOrganizations/org2.test.com/users/User1@org2.test.com/msp/keystore/key.pem
#       clientSignedCert:
#         path: ./crypto-config/peerOrganizations/org2.test.com/users/User1@org2.test.com/msp/signcerts/User1@org2.test.com-cert.pem


# channels:
#   common:
#     configBinary: ./common.tx
#     created: true
#     orderers:
#     - orderer1.orderer1.orderer.test.com
#     - orderer2.orderer1.orderer.test.com
#     - orderer3.orderer1.orderer.test.com
#     peers:
#       peer0.org1.test.com:
#         eventSource: true
#       peer0.org2.test.com:
#         eventSource: true
#       peer0.org3.test.com:
#         eventSource: true

#     chaincodes:
#     - id: minetrace
#       version: "1"
#       language: golang
#       path: fabric/samples/minetrace/go
#       # metadataPath: src/fabric/samples/marbles/go/metadata


# organizations:
#   Org1:
#     mspid: Org1MSP
#     peers:
#     - peer0.org1.test.com
#     - peer1.org1.test.com
#     certificateAuthorities:
#     - ca.org1.test.com
#     adminPrivateKey:
#       path: ./crypto-config/peerOrganizations/org1.test.com/users/Admin@org1.test.com/msp/keystore/key.pem
#     signedCert:
#       path: ./crypto-config/peerOrganizations/org1.test.com/users/Admin@org1.test.com/msp/signcerts/Admin@org1.test.com-cert.pem

#   Org2:
#     mspid: Org2MSP
#     peers:
#     - peer0.org2.test.com
#     - peer1.org2.test.com
#     certificateAuthorities:
#     - ca.org2.test.com
#     adminPrivateKey:
#       path: ./crypto-config/peerOrganizations/org2.test.com/users/Admin@org2.test.com/msp/keystore/key.pem
#     signedCert:
#       path: ./crypto-config/peerOrganizations/org2.test.com/users/Admin@org2.test.com/msp/signcerts/Admin@org2.test.com-cert.pem

#   Org3:
#     mspid: Org3MSP
#     peers:
#     - peer0.org3.test.com
#     - peer1.org3.test.com
#     certificateAuthorities:
#     - ca.org3.test.com
#     adminPrivateKey:
#       path: ./crypto-config/peerOrganizations/org3.test.com/users/Admin@org3.test.com/msp/keystore/key.pem
#     signedCert:
#       path: ./crypto-config/peerOrganizations/org3.test.com/users/Admin@org3.test.com/msp/signcerts/Admin@org3.test.com-cert.pem

# orderers:
#   orderer1.orderer.test.com:
#     url: grpcs://localhost:7050
#     grpcOptions:
#       ssl-target-name-override: orderer1.orderer.test.com
#     tlsCACerts:
#         path: ./crypto-config/ordererOrganizations/orderer.test.com/orderers/orderer1.orderer.test.com/msp/tlscacerts/tlsca.test.com-cert.pem
#   orderer2.test.com:
#     url: grpcs://localhost:8050
#     grpcOptions:
#         ssl-target-name-override: orderer2.test.com
#     tlsCACerts:
#         path: ./crypto-config/ordererOrganizations/orderer.test.com/orderers/orderer12.test.com/msp/tlscacerts/tlsca.test.com-cert.pem
#   orderer3.test.com:
#       url: grpcs://localhost:9050
#       grpcOptions:
#           ssl-target-name-override: orderer3.test.com
#       tlsCACerts:
#           path: ./crypto-config/ordererOrganizations/orderer.test.com/orderers/orderer3.test.com/msp/tlscacerts/tlsca.test.com-cert.pem

# peers:
#   peer0.org1.test.com:
#     url: grpcs://localhost:7051
#     grpcOptions:
#       ssl-target-name-override: peer0.org1.test.com
#       grpc.keepalive_time_ms: 600000
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org1.test.com/peers/peer0.org1.test.com/msp/tlscacerts/tlsca.org1.test.com-cert.pem

#   peer1.org1.test.com:
#     url: grpcs://localhost:8051
#     grpcOptions:
#       ssl-target-name-override: peer1.org1.test.com
#       grpc.keepalive_time_ms: 600000
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org1.test.com/peers/peer1.org1.test.com/msp/tlscacerts/tlsca.org1.test.com-cert.pem

#   peer0.org2.test.com:
#     url: grpcs://localhost:9051
#     grpcOptions:
#       ssl-target-name-override: peer0.org2.test.com
#       grpc.keepalive_time_ms: 600000
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org2.test.com/peers/peer0.org2.test.com/msp/tlscacerts/tlsca.org2.test.com-cert.pem
#   peer1.org2.test.com:
#     url: grpcs://localhost:10051
#     grpcOptions:
#       ssl-target-name-override: peer1.org2.test.com
#       grpc.keepalive_time_ms: 600000
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org2.test.com/peers/peer1.org2.test.com/msp/tlscacerts/tlsca.org2.test.com-cert.pem
#   peer0.org3.test.com:
#     url: grpcs://localhost:9051
#     grpcOptions:
#       ssl-target-name-override: peer0.org3.test.com
#       grpc.keepalive_time_ms: 600000
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org3.test.com/peers/peer0.org3.test.com/msp/tlscacerts/tlsca.org3.test.com-cert.pem
#   peer1.org3.test.com:
#     url: grpcs://localhost:10051
#     grpcOptions:
#       ssl-target-name-override: peer1.org3.test.com
#       grpc.keepalive_time_ms: 600000
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org3.test.com/peers/peer1.org3.test.com/msp/tlscacerts/tlsca.org3.test.com-cert.pem

# certificateAuthorities:
#   ca.org1.test.com:
#     url: https://localhost:7054
#     httpOptions:
#       verify: false
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org1.test.com/tlsca/tlsca.org1.test.com-cert.pem
#     registrar:
#     - enrollId: admin
#       enrollSecret: adminpw

#   ca.org2.test.com:
#     url: https://localhost:8054
#     httpOptions:
#       verify: false
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org2.test.com/tlsca/tlsca.org2.test.com-cert.pem
#     registrar:
#     - enrollId: admin
#       enrollSecret: adminpw
#   ca.org3.test.com:
#     url: https://localhost:8054
#     httpOptions:
#       verify: false
#     tlsCACerts:
#         path: ./crypto-config/peerOrganizations/org3.test.com/tlsca/tlsca.org3.test.com-cert.pem
#     registrar:
#     - enrollId: admin
#       enrollSecret: adminpw

name: Caliper test
version: "2.0.0"

caliper:
  blockchain: fabric
  sutOptions:
    mutualTls: true

channels:
  - channelName: mychannel
    contracts:
      - id: basic

organizations:
  - mspid: Org1MSP
    identities:
      certificates:
        - name: "User1"
          clientPrivateKey:
            path: "./crypto-config/peerOrganizations/org1.test.com/users/User1@org1.test.com/msp/keystore/priv_sk"
          clientSignedCert:
            path: "./crypto-config/peerOrganizations/org1.test.com/users/User1@org1.test.com/msp/signcerts/User1@org1.test.com-cert.pem"
    connectionProfile:
      path: "./network_config.json"
      discover: true